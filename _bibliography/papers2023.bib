@inproceedings{iannone2023lisp,
  title         = {Implementation and Evaluation of LISP Publish/Subscribe}, 
  author        = {Piron, Tom and Iannone, Luigi and Donnet, Beno{\^\i}t},
  booktitle     = {International Conference on 6G Networking (6GNet)},
  year          = {2023},
  month         = {October}
  volume        = {},
  number        = {},
  pages         = {},
  doi           = {},
  howpublished  = {},
  abstract      = {The design of future 6G network will push even further the convergence of different types of mobile networks, integrating space, aerial and terrestrial access. Mobility, remains one of the most difficult aspects to tackle in this context. One approach under consideration is the use of an overlay solution able to cope with new mobility requirements. LISP (Locator/ID Separation Protocol) being one candidate overlay protocol. LISP separates the addressing space in two orthogonal spaces, one to identify end points, the other to locate them. End-to-end communication is guaranteed by a mapping system allowing to associate location with identities. Mapping resolution is done at communication setup, opening the question: how to guarantee that, in case of changes, the latest mapping is used? Originally, there was no mechanism to explicitly express the interest in updates of specific mappings. LISP Publish-Subscribe has been introduced in order to provide such a feature. This paper provides an implementation of LISP Publish-Subscribe in the NS-3 simulator and quantitatively analyze its benefits.}
}


@inproceedings{fressancourt2023ariadne,
  title         = {Ariadne: a Privacy-Preserving Network Layer Protocol}, 
  author        = {Fressancourt, Antoine and Iannone, Luigi},
  booktitle     = {2023 7th Cyber Security in Networking Conference (CSNet)},
  year          = {2023},
  volume        = {},
  number        = {},
  pages         = {},
  doi           = {},
  howpublished  = {/internet-protocols/ppt/papers/2023/ariadneCSNet23CameraReady.pdf},
  abstract      = {This paper presents Ariadne, a privacy-preserving network layer communication protocol using source routing to avoid relying on trusted third parties. In Ariadne, a source node willing to send anonymized network traffic to a destination uses a path consisting in nodes with which it has pre-shared symmetric keys through a setup phase. It uses temporary keys derived from those pre-shared keys to protect communication privacy using onion routing techniques. Ariadne enhances previous approaches by introducing two novelties. Firstly, the temporary keys used to process the packets on the path are referenced using mutually known encrypted patterns. This avoids the use of an explicit key reference that could be used to de-anonymize the communications. Secondly, the source route is encoded in a fixed size, sequentially encrypted vector of routing information elements, in which the elements' positions in the vector are pseudo-randomly permuted.}
}

@inproceedings{zhang2023multi-commodity,
  title         = {The Multi-Commodity Flow Problem with Disjoint Signaling Paths: A Branch-and-Benders-Cut Algorithm}, 
  author        = {Zhang, Jiachen and Magnouche, Youcef and Martin, Sebastien and Fressancourt, Antoine and Beck, J. Christopher},
  booktitle     = {2023 9th International Conference on Control, Decision and Information Technologies (CoDIT)},
  year          = {2023},
  volume        = {},
  number        = {},
  pages         = {477-482},
  doi           = {10.1109/CoDIT58514.2023.10284108},
  howpublished  = {/internet-protocols/ppt/papers/2023/CoDIT2023_0135_FI.pdf},
  abstract      = {Data routing in networks is required to be efficient and reliable. Fast detection and recovery from link or path failures play crucial roles in the reliability guarantee. In this work, we investigate a variant of the multi-commodity flow problem to address one formalization of reliability, where for each demand, a primary path transmits the demand without exceeding a jitter limit and an arc-disjoint secondary path signals the possible failure of the primary path. We first present a compact mixed-integer linear programming model and then we devise a Branch-and-Benders-Cut algorithm to solve this combinatorial optimization problem. On a diverse set of instances, we evaluate the algorithm's performance and discuss several numerical results.}
}

